# Spring Boot 프로젝트 가이드라인

## 프로젝트 개요
- Spring Boot 3.5.4 기반의 블로그 애플리케이션
- JPA/Hibernate를 사용한 데이터 접근
- Mustache 템플릿 엔진 사용
- H2 인메모리 데이터베이스

## 코딩 스타일
- 클래스명: PascalCase (예: BoardController, UserService)
- 메서드명: camelCase (예: 게시글목록(), findById())
- 변수명: camelCase (예: boardRepository, userService)
- 상수명: UPPER_SNAKE_CASE (예: MAX_SIZE)

## 패키지 구조
- `com.metacoding.springv1.board`: 게시글 관련 기능
- `com.metacoding.springv1.user`: 사용자 관련 기능
- `com.metacoding.springv1.config`: 설정 및 예외 클래스

## 주요 컴포넌트
- **Controller**: HTTP 요청 처리 및 응답 반환
- **Service**: 비즈니스 로직 처리
- **Repository**: 데이터 접근 계층
- **Entity**: JPA 엔티티 클래스
- **DTO**: 데이터 전송 객체

## 테스트 가이드라인
- 테스트 클래스명: `{클래스명}Test` (예: BoardRepositoryTest)
- 테스트 메서드명: `{메서드명}_test` (예: findById_test)
- `@DataJpaTest` 사용하여 JPA 테스트 환경 구성
- `@Transactional` 사용하여 테스트 격리

## 데이터베이스
- H2 인메모리 데이터베이스 사용
- `data.sql`로 초기 데이터 로드
- JPA 자동 테이블 생성 (`ddl-auto=create`)

## 인코딩
- 모든 파일은 UTF-8 인코딩 사용
- 한글 메서드명 및 변수명 허용
- 데이터베이스 연결 시 UTF-8 인코딩 설정

## 예외 처리
- `Exception404`: 리소스를 찾을 수 없을 때
- `Exception401`: 인증이 필요할 때
- 적절한 HTTP 상태 코드와 함께 예외 반환

## 주의사항
- 코드 수정 시 기존 기능이 깨지지 않도록 주의
- 테스트 코드 작성 시 한글 출력 확인
- JPA 연관관계 매핑 시 지연로딩/즉시로딩 고려
